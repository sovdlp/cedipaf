{"version":3,"sources":["../../src/composables/filter.ts"],"names":["getPropertyFromItem","propsFactory","wrapInArray","computed","unref","defaultFilter","value","query","item","toString","toLocaleLowerCase","indexOf","makeFilterProps","customFilter","Function","customKeyFilter","Object","filterKeys","Array","String","filterMode","type","default","noFilter","Boolean","filterItems","items","options","array","filter","keys","customFiltersLength","length","loop","i","customMatches","defaultMatches","match","key","keyFilter","title","defaultMatchesLength","customMatchesLength","push","index","matches","useFilter","props","strQuery","filteredItems","transformedItems","map"],"mappings":"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","sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\nimport { computed, unref } from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\nimport type { InternalItem } from './items'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: any) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: any[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(item)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(item as any, key, item)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter (\n  props: FilterProps,\n  items: MaybeRef<InternalItem[]>,\n  query?: Ref<string | undefined>,\n) {\n  const strQuery = computed(() => (\n    typeof query?.value !== 'string' &&\n    typeof query?.value !== 'number'\n  ) ? '' : String(query.value))\n\n  const filteredItems = computed(() => {\n    const transformedItems = unref(items)\n    const matches = filterItems(\n      transformedItems,\n      strQuery.value,\n      {\n        customKeyFilter: props.customKeyFilter,\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    return matches.map(({ index, matches }) => ({\n      item: transformedItems[index],\n      matches,\n    }))\n  })\n\n  return { filteredItems }\n}\n"],"file":"filter.mjs"}