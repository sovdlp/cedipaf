{"version":3,"sources":["../../../src/components/VAutocomplete/VAutocomplete.tsx"],"names":["makeSelectProps","VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeFilterProps","useFilter","makeTransitionProps","useItems","useForwardRef","useLocale","useProxiedModel","computed","nextTick","ref","watch","genericComponent","useRender","wrapInArray","highlightResult","text","matches","length","Array","isArray","Error","substr","VAutocomplete","name","props","search","String","filterKeys","transition","emits","e","val","setup","slots","t","vTextFieldRef","activator","isFocused","isPristine","menu","items","transformIn","transformOut","model","v","transformed","multiple","filteredItems","value","undefined","selections","map","find","item","selected","selection","onClear","openOnClear","onClickControl","hideNoData","onKeydown","includes","key","onInput","target","onAfterLeave","isSelecting","select","index","findIndex","splice","title","$el","querySelector","at","hasChips","chips","chip","menuIcon","default","eager","noDataText","preventDefault","onChipClose","stopPropagation","slotProps","modelValue","closable","closableChips","size","originalItem"],"mappings":"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","sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useItems } from '@/composables/items'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { genericComponent, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { FilterMatch } from '@/composables/filter'\nimport type { DefaultChipSlot } from '@/components/VSelect/VSelect'\nimport type { MakeSlots } from '@/util'\n\nfunction highlightResult (text: string, matches: FilterMatch, length: number) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\nexport const VAutocomplete = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [{ item: T }]\n  }>\n}>()({\n  name: 'VAutocomplete',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    search: String,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'update:search': (val: any) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const menu = ref(false)\n    const { items, transformIn, transformOut } = useItems(props)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : transformed[0]\n      }\n    )\n    const { filteredItems } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => item.value === v.value) || v\n      })\n    })\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onClickControl () {\n      if (props.hideNoData && !filteredItems.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n    }\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    const isSelecting = ref(false)\n    function select (item: any) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value)\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n          search.value = ''\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n\n        isSelecting.value = true\n\n        search.value = item.title\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple ? '' : String(selections.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        menu.value = false\n        search.value = ''\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          modelValue={ search.value }\n          onInput={ onInput }\n          class={[\n            'v-autocomplete',\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              [`v-autocomplete--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          dirty={ selected.value.length > 0 }\n          onClick:clear={ onClear }\n          onClick:control={ onClickControl }\n          onClick:input={ onClickControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-autocomplete__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                    onAfterLeave={ onAfterLeave }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !filteredItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { filteredItems.value.map(({ item, matches }) => (\n                        <VListItem\n                          { ...item.props }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, matches.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n                  { selections.value.map((selection, index) => {\n                    function onChipClose (e: Event) {\n                      e.stopPropagation()\n                      e.preventDefault()\n\n                      select(selection)\n                    }\n\n                    const slotProps = {\n                      'onClick:close': onChipClose,\n                      modelValue: true,\n                    }\n\n                    return (\n                      <div class=\"v-autocomplete__selection\">\n                        { hasChips && (\n                          <VDefaultsProvider\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: selection.props.title,\n                              },\n                            }}\n                          >\n                            { slots.chip\n                              ? slots.chip({ props: slotProps, item: selection.originalItem })\n                              : (<VChip { ...slotProps } />)\n                            }\n                          </VDefaultsProvider>\n                        ) }\n\n                        { !hasChips && (\n                          slots.selection\n                            ? slots.selection({ item: selection.originalItem })\n                            : (\n                              <span class=\"v-autocomplete__selection-text\">\n                                { selection.props.title }\n                                { props.multiple && (index < selections.value.length - 1) && (\n                                  <span class=\"v-autocomplete__selection-comma\">,</span>\n                                ) }\n                              </span>\n                            )\n                        ) }\n                      </div>\n                    )\n                  }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({\n      filteredItems,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n"],"file":"VAutocomplete.mjs"}