{"version":3,"sources":["../../../src/components/VMenu/VMenu.tsx"],"names":["VOverlay","VDialogTransition","makeTransitionProps","useProxiedModel","computed","inject","provide","ref","watch","genericComponent","getUid","useRender","VMenuSymbol","useForwardRef","useScopeId","VMenu","name","inheritAttrs","props","modelValue","Boolean","id","String","transition","component","emits","value","setup","attrs","slots","isActive","scopeId","uid","overlay","parent","openChildren","register","unregister","closeParents","setTimeout","val","onClickOutside","default","activator"],"mappings":"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","sourcesContent":["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VOverlay } from '@/components/VOverlay'\nimport { VDialogTransition } from '@/components/transitions'\n\n// Composables\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, useRender } from '@/util'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useScopeId } from '@/composables/scopeId'\n\nexport const VMenu = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VMenu',\n\n  inheritAttrs: false,\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    modelValue: Boolean,\n    id: String,\n\n    ...makeTransitionProps({\n      transition: { component: VDialogTransition },\n    } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    let openChildren = 0\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren\n      },\n      unregister () {\n        --openChildren\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    useRender(() => (\n      <VOverlay\n        ref={ overlay }\n        v-model={ isActive.value }\n        class={[\n          'v-menu',\n        ]}\n        transition={ props.transition }\n        absolute\n        closeOnContentClick\n        locationStrategy=\"connected\"\n        scrollStrategy=\"reposition\"\n        scrim={ false }\n        openDelay=\"300\"\n        closeDelay=\"250\"\n        activatorProps={{\n          'aria-haspopup': 'menu',\n          'aria-expanded': String(isActive.value),\n          'aria-owns': id.value,\n        }}\n        onClick:outside={ onClickOutside }\n        { ...scopeId }\n        { ...attrs }\n        v-slots={{\n          default: slots.default,\n          activator: slots.activator,\n        }}\n      />\n    ))\n\n    return useForwardRef({ id }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"],"file":"VMenu.mjs"}