{"version":3,"sources":["../../../src/components/VBadge/VBadge.tsx"],"names":["VIcon","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","useTheme","makeTransitionProps","MaybeTransition","useBackgroundColor","useTextColor","useLocale","makeLocationProps","useLocation","computed","toRef","defineComponent","pick","VBadge","name","inheritAttrs","props","bordered","Boolean","color","String","content","Number","dot","floating","icon","inline","label","type","default","max","modelValue","textColor","location","transition","setup","ctx","backgroundColorClasses","backgroundColorStyles","roundedClasses","t","textColorClasses","textColorStyles","themeClasses","locationStyles","value","isNaN","badgeAttrs","attrs","slots","undefined","badge"],"mappings":"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","sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useLocale } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, pick } from '@/util'\n\nexport const VBadge = defineComponent({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: {\n    bordered: Boolean,\n    color: String,\n    content: [Number, String],\n    dot: Boolean,\n    floating: Boolean,\n    icon: String,\n    inline: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge',\n    },\n    max: [Number, String],\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    textColor: String,\n\n    ...makeLocationProps({ location: 'top end' } as const),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n  },\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { roundedClasses } = useRounded(props)\n    const { t } = useLocale()\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'textColor'))\n    const { themeClasses } = useTheme()\n\n    const { locationStyles } = useLocation(props, true, computed(() => {\n      return props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n    }))\n\n    return () => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= props.max ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = pick(ctx.attrs as Record<string, any>, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n          ]}\n          { ...attrs }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                  themeClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  textColorStyles.value,\n                  props.inline ? {} : locationStyles.value,\n                ]}\n                aria-atomic=\"true\"\n                aria-label={ t(props.label, value) }\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={ props.icon } />\n                  : content\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VBadge = InstanceType<typeof VBadge>\n"],"file":"VBadge.mjs"}