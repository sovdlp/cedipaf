{"version":3,"sources":["../../../src/components/VSelect/VSelect.tsx"],"names":["VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeItemsProps","useItems","makeTransitionProps","useForwardRef","useLocale","useProxiedModel","computed","ref","watch","genericComponent","propsFactory","useRender","wrapInArray","makeSelectProps","chips","Boolean","closableChips","eager","hideNoData","hideSelected","menuIcon","type","String","default","modelValue","multiple","noDataText","openOnClear","itemChildren","VSelect","name","props","transition","emits","val","setup","slots","t","vTextFieldRef","activator","menu","items","transformIn","transformOut","model","v","transformed","selections","value","map","find","item","selected","selection","onClear","e","onClickControl","length","onKeydown","includes","key","select","index","findIndex","splice","$el","querySelector","hasChips","chip","join","preventDefault","onChipClose","stopPropagation","slotProps","closable","size","text","title","originalItem"],"mappings":"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","sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeItemsProps, useItems } from '@/composables/items'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, ref, watch } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { InternalItem } from '@/composables/items'\nimport type { MakeSlots } from '@/util'\n\nexport interface InternalSelectItem extends InternalItem {}\n\nexport interface DefaultSelectionSlot {\n  selection: InternalSelectItem\n}\n\nexport interface DefaultChipSlot extends DefaultSelectionSlot {\n  props: {\n    'onClick:close': (e: Event) => void\n    modelValue: any\n  }\n}\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menuIcon: {\n    type: String,\n    default: '$dropdown',\n  },\n  modelValue: {\n    type: null,\n    default: () => ([]),\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'select')\n\nexport const VSelect = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [{ item: T }]\n  }>\n}>()({\n  name: 'VSelect',\n\n  props: {\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: 'scale-transition' }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const menu = ref(false)\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : transformed[0]\n      }\n    )\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => item.value === v.value) || v\n      })\n    })\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onClickControl () {\n      if (props.hideNoData && !items.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value)\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n        menu.value = false\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly\n          onClick:clear={ onClear }\n          onClick:input={ onClickControl }\n          onClick:control={ onClickControl }\n          onBlur={ () => menu.value = false }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-select__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !items.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { items.value.map(item => (\n                        <VListItem\n                          { ...item.props }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        />\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n\n                { selections.value.map((selection, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(selection)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                  }\n\n                  return (\n                    <div class=\"v-select__selection\">\n                      { hasChips && (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: selection.props.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ props: slotProps, selection })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) }\n\n                      { !hasChips && (\n                        slots.selection\n                          ? slots.selection({ item: selection.originalItem })\n                          : (\n                            <span class=\"v-select__selection-text\">\n                              { selection.props.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-select__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      ) }\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({}, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"file":"VSelect.mjs"}