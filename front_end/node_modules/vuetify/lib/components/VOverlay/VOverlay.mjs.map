{"version":3,"sources":["../../../src/components/VOverlay/VOverlay.tsx"],"names":["makeActivatorProps","useActivator","makeLocationStrategyProps","useLocationStrategies","makeScrollStrategyProps","useScrollStrategies","makeThemeProps","provideTheme","makeTransitionProps","MaybeTransition","useBackButton","useRouter","useToggleScope","useBackgroundColor","useProxiedModel","useRtl","useTeleport","makeDimensionProps","useDimension","makeLazyProps","useLazy","useStack","ClickOutside","convertToUnit","genericComponent","getScrollParent","IN_BROWSER","standardEasing","useRender","computed","mergeProps","ref","Teleport","toHandlers","toRef","Transition","watch","Scrim","props","modelValue","color","rest","backgroundColorClasses","value","backgroundColorStyles","VOverlay","name","directives","inheritAttrs","absolute","Boolean","attach","String","Object","closeOnBack","type","default","contained","contentClass","contentProps","noClickAnimation","persistent","scrim","zIndex","Number","emits","e","afterLeave","setup","slots","attrs","emit","isActive","teleportTarget","themeClasses","rtlClasses","hasContent","onAfterLeave","scrimColor","isTop","stackStyles","activatorEl","activatorRef","activatorEvents","contentEvents","dimensionStyles","root","contentEl","contentStyles","updateLocation","onClickOutside","animateClick","closeConditional","val","window","addEventListener","onKeydown","removeEventListener","immediate","key","router","next","top","scrollParent","document","scrollingElement","scrollTop","animate","transformOrigin","transform","duration","easing","activator","activatorProps","transition","handler","include"],"mappings":"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","sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\nimport { useTeleport } from '@/composables/teleport'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useStack } from '@/composables/stack'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  convertToUnit,\n  genericComponent,\n  getScrollParent,\n  IN_BROWSER,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { BackgroundColorData } from '@/composables/color'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = MakeSlots<{\n  default: [{ isActive: Ref<boolean> }]\n  activator: [{ isActive: boolean, props: Record<string, any> }]\n}>\n\nexport const VOverlay = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    absolute: Boolean,\n    attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n    closeOnBack: {\n      type: Boolean,\n      default: true,\n    },\n    contained: Boolean,\n    contentClass: null,\n    contentProps: null,\n    noClickAnimation: Boolean,\n    modelValue: Boolean,\n    persistent: Boolean,\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 2000,\n    },\n\n    ...makeActivatorProps(),\n    ...makeDimensionProps(),\n    ...makeLocationStrategyProps(),\n    ...makeScrollStrategyProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps(),\n    ...makeLazyProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { teleportTarget } = useTeleport(computed(() => props.attach || props.contained))\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { isTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'))\n    const { activatorEl, activatorRef, activatorEvents, contentEvents } = useActivator(props, { isActive, isTop })\n    const { dimensionStyles } = useDimension(props)\n\n    const root = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value && isTop.value\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && isTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (isTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value?.animate([\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            ref: activatorRef,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n\n        { IN_BROWSER && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            { hasContent.value && (\n              <div\n                class={[\n                  'v-overlay',\n                  {\n                    'v-overlay--absolute': props.absolute || props.contained,\n                    'v-overlay--active': isActive.value,\n                    'v-overlay--contained': props.contained,\n                  },\n                  themeClasses.value,\n                  rtlClasses.value,\n                ]}\n                style={[stackStyles.value, { top: convertToUnit(top.value) }]}\n                ref={ root }\n                {...attrs}\n              >\n                <Scrim\n                  color={ scrimColor }\n                  modelValue={ isActive.value && !!props.scrim }\n                />\n                <MaybeTransition\n                  appear\n                  persisted\n                  transition={ props.transition }\n                  target={ activatorEl.value }\n                  onAfterLeave={() => { onAfterLeave(); emit('afterLeave') }}\n                >\n                  <div\n                    ref={ contentEl }\n                    v-show={ isActive.value }\n                    v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                    class={[\n                      'v-overlay__content',\n                      props.contentClass,\n                    ]}\n                    style={[\n                      dimensionStyles.value,\n                      contentStyles.value,\n                    ]}\n                    { ...toHandlers(contentEvents.value) }\n                    { ...props.contentProps }\n                  >\n                    { slots.default?.({ isActive }) }\n                  </div>\n                </MaybeTransition>\n              </div>\n            )}\n          </Teleport>\n        ) }\n      </>\n    ))\n\n    return {\n      animateClick,\n      contentEl,\n      activatorEl,\n      isTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n"],"file":"VOverlay.mjs"}